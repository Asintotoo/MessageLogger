plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version "8.1.1"
}

group = 'com.asintoto'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'com.github.Asintotoo:Basic:1.2.14'
    implementation 'com.github.Revxrsal.Lamp:common:3.2.1'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.2.1'
}

compileJava {
    options.compilerArgs += ["-parameters"]
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    build {
        dependsOn(shadowJar)
    }
    shadowJar {
        mustRunAfter(build)

        dependencies {
            include(dependency('com.github.Asintotoo:Basic:1.2.14'))
            include(dependency('com.github.Revxrsal.Lamp:common:3.2.1'))
            include(dependency('com.github.Revxrsal.Lamp:bukkit:3.2.1'))
        }

        archiveClassifier.set("")

        relocate "com.asintoto.basic", "com.asintoto.libs.basic"
        relocate "com.asintoto.colorlib", "com.asintoto.libs.colorlib"
        relocate "revxrsal", "com.asintoto.libs.revxrsal"

        minimize()
    }

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
